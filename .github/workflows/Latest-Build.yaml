# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Combined Basketball Analysis Workflow

on:
  push:
    branches: [ "DEV_Code" ]

permissions:
  contents: read

env:
  OPENCV_HEADLESS: 1  # Environment variable that applies to all jobs

jobs:
  setup:
    runs-on: macos-latest
    outputs:
      python-version: '3.10'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r Requirements.txt
      shell: bash

  game-simulation:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash
      
    - name: Run Basketball Game Simulation and Check Results
      run: |
        python "./Basketball_Game_Simulation.py" > game_simulation_output.log

        cat game_simulation_output.log

        if grep -q "Game Simulation succeeded" game_simulation_output.log; then
          echo "Success message found: Test passed."
        else
          echo "Success message not found: Test failed."
          exit 1
        fi
      shell: bash

  object-tracking:
    needs: setup
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash

    - name: Run Basketball Object Tracking and Check Results
      run: |
        python "./Basketball_Object_Tracking.py" > object_tracking_output.log

        cat object_tracking_output.log

        if grep -q "Object Tracking succeeded" object_tracking_output.log; then
          echo "Success message found: Test passed."
        else
          echo "Success message not found: Test failed."
          exit 1
        fi
      shell: bash
