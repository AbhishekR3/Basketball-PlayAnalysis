# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run Basketball Object Tracking

on:
  push:
    branches: [ "DEV_Code" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest
    env:
      OPENCV_HEADLESS: 1  # Set it here to apply to all steps

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libx264-dev libgtk-3-dev
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r Requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
    - name: Run Basketball Object Tracking
      run: python "./Basketball_Object_Tracking.py" > tracking_output.log
      shell: /usr/bin/bash -e {0}
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.10.14/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.10.14/x64/lib

    - name: Check results
      run: |
        if grep -q "Object Tracking succeeded" tracking_output.log; then
          echo "Success message found: Test passed."
        else
          echo "Success message not found: Test failed."
          exit 1
        fi