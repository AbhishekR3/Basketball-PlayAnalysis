This is my idea outline for this project.
Some of these are things I read online and thought might be applicable.
I also use this as a document to note down things I need to research and general planning.

0.4.0
- Neural Networks
--> LSTM + I3D + C3D
--> MultiClass
--> Converted values to bfloat16 values (vectors) for more efficient models

- Ensemble Methods
--> Voting + Stacking

- Model Compression
--> Post-Training Static Quantization
--> Structured Model Pruning

- CI Testing

- General Updates
--> Improved object detection model
MOTA,  MOTP, IDF1 values


######################### Project Outline #########################
Create simulations of plays using Pygame
Example:
- Pass
- Hockey Pass
- Steal
- Screens
- Pick and roll
- Delay action

Object Detections 
- Need to convert to Image Segmentation?
- Built custom model on YOLOv10m

Object Tracking
- Create a mask of the basketball court image
- Deep Sort (helps considering occuluion)
- Validation Metrics: IDF1, MOTA, MOTP

Feature Engineering
- PCA
- Exponential Decay Temporal Encoding on TrackID
- Validation Metrics
-- Explained varaince
-- Cross-Validation

Spatial Databases
- ACID
--> Atomicity
---- Inserts entire data or forefits
---- Spatial indexing
--> Consistent
---- NOT NULL, Unique, Check
---- Spatial constraints
--> Isolation
---- Locking mechanism for concurrent spatial operations
--> Durability
---- Commited spatial transactions persisted

- Spatial View 
---- Have a view of pre-calculated distances between all objects

- Spatial Indexing
---- QuadTrees
---- Cache included

- Error Handling
---- Data Integrity
---- Performance related
---- Data loading
---- Spatial Indexing

- Spatial Data Types
---- Point - Individual Points
---- Line String - Tracking

- Temporal Aspect 
---- Convert seconds to timestamp? Need to figure out how to optimally understand temporal aspect 

Neural Networks
- C3D
- LSTM 
- TCN

Transformers
- STN
- TimeSformer

Model Efficiency/Compression
- Quantization
- Pruning
- Efficient Interface? Research more
- Neural Network on every other frame or every 5 frames?
- Feature Reduction: PCA / anything else?
- Ensemble methods

Hyperparameter Tuning
- Adam optimizer
- Grid Search

Data Processing
- Parralel/Batch processing?
- Distributed processing
- GPU accelerated libraries
- Spatial Databases

Simulation Optimization
- Change video dimensions???
- Change video resolution to 240p?
- Consider switching to 60/higher FPS

GPU Accelerated Libraries
- MOT - CUDA, CuPy, Numba, PyCUDA, cuDF
- NN - Tensorflow, Keras

######################### Notes #########################
1. Deep Sort Paper
- Combinations of big/small objects doesnt work well. 
Think about making the objects closer in size? It has a scale threshold too

- Scale threshold (important) + reduction threshold

- Current frame-previous frame matching search takes the longest time to process
So you should reduce the dimensions
-> Dimensions
- Basketball - color + x_coordinate + y_coordinates - x1
- Player - color + x_coordinate + y_coordinates - x10
-> Algorithms
- PCA (For efficiency)
- t-SNE (For Visualization)


2. Parallel Processing

Resource Allocation
- GPU
- Memory
- I/O resources

State Handling / Synchronization - Implement mechanisms to coordinate completion of previous task before processing to next task

Error Handlings

Scalability

How to configure for Docker containers

Ensure GPU is being used

Should you use partial results to process to the next step? 


